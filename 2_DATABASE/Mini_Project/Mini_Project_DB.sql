DROP TABLE TB_SHARE;
DROP TABLE TB_COMMENT;
DROP TABLE TB_BULLETIN;
DROP TABLE TB_MEMBER_ITEM;
DROP TABLE TB_ITEM;
DROP TABLE TB_TRADELOG;
DROP TABLE TB_MEMBER;
DROP TABLE TB_MEMBER_RANK;
DROP TABLE TB_STOCK;


--================= 테이블 생성  ======================
CREATE TABLE "TB_MEMBER" (
  "MEMBER_UID" NUMBER PRIMARY KEY,
  "MEMBER_NAME" VARCHAR2(30),
  "MEMBER_ID" VARCHAR2(20) UNIQUE,
  "MEMBER_PWD" VARCHAR2(30) NOT NULL,
  "MEMBER_RCODE" VARCHAR2(5),
  "ENROLL_DATE" DATE,
  "WITHDRAW_YN" CHAR(1) CHECK(WITHDRAW_YN IN ('Y','N'))
);

COMMENT ON COLUMN TB_MEMBER.MEMBER_UID IS "멤버UID(시퀀스)";
COMMENT ON COLUMN TB_MEMBER.MEMBER_NAME IS "멤버 이름";
COMMENT ON COLUMN TB_MEMBER.MEMBER_ID IS "멤버 아이디";
COMMENT ON COLUMN TB_MEMBER.MEMBER_PWD IS "멤버 비밀번호";
COMMENT ON COLUMN TB_MEMBER.MEMBER_RCODE IS "멤버 등급번호";
COMMENT ON COLUMN TB_MEMBER.ENROLL_DATE IS "멤버 가입일";
COMMENT ON COLUMN TB_MEMBER.WITHDRAW_YN IS "멤버 탈퇴여부";

CREATE TABLE "TB_MEMBER_RANK" (
  "MEMBER_RCODE" VARCHAR2(5) PRIMARY KEY,
  "MEMBER_RNAME" VARCHAR2(30)
);

COMMENT ON COLUMN TB_MEMBER_RANK.MEMBER_RCODE IS "멤버 등급번호";
COMMENT ON COLUMN TB_MEMBER_RANK.MEMBER_RNAME IS "멤버 등급이름";

CREATE TABLE "TB_STOCK" (
  "STOCK_ID" NUMBER PRIMARY KEY,
  "STOCK_NAME" VARCHAR2(50)
);

COMMENT ON COLUMN TB_STOCK.STOCK_ID IS "주식 번호(시퀀스)";
COMMENT ON COLUMN TB_STOCK.STOCK_NAME IS "주식 이름";

CREATE TABLE "TB_SHARE" (
  "MEMBER_UID" NUMBER,
  "STOCK_ID" NUMBER,
  "SHARE_QTY" NUMBER,
  "PURCHASE_PRICE" NUMBER,
  "SHARE_FLUCT" NUMBER,
  PRIMARY KEY ("MEMBER_UID", "STOCK_ID")
);

COMMENT ON COLUMN TB_SHARE.MEMBER_UID IS "멤버UID(시퀀스)";
COMMENT ON COLUMN TB_SHARE.STOCK_ID IS "주식 번호(시퀀스)";
COMMENT ON COLUMN TB_SHARE.SHARE_QTY IS "주식 보유량";
COMMENT ON COLUMN TB_SHARE.PURCHASE_PRICE IS "주식 매입가";
COMMENT ON COLUMN TB_SHARE.SHARE_FLUCT IS "주식 변동률(다음날)";

CREATE TABLE "TB_TRADELOG" (
  "TRADE_ID" NUMBER PRIMARY KEY,
  "MEMBER_UID" NUMBER,
  "TRADE_DATE" DATE,
  "STOCK_ID" NUMBER,
  "TRADE_QTY" NUMBER,
  "TRADE_PRICE" NUMBER,
  "TRADE_STATUS" VARCHAR2(9)
);

COMMENT ON COLUMN TB_TRADELOG.TRADE_ID IS "거래 번호(시퀀스)";
COMMENT ON COLUMN TB_TRADELOG.MEMBER_UID IS "멤버UID(시퀀스)";
COMMENT ON COLUMN TB_TRADELOG.TRADE_DATE IS "거래 일자";
COMMENT ON COLUMN TB_TRADELOG.STOCK_ID IS "주식 이름";
COMMENT ON COLUMN TB_TRADELOG.TRADE_QTY IS "거래 수량";
COMMENT ON COLUMN TB_TRADELOG.TRADE_PRICE IS "거래 가격";
COMMENT ON COLUMN TB_TRADELOG.TRADE_STATUS IS "상태(판매/구매)";

CREATE TABLE "TB_BULLETIN" (
  "BULLETIN_ID" NUMBER PRIMARY KEY,
  "BULLETIN_VCOUNT" NUMBER,
  "BULLETIN_WRT_DATE" DATE,
  "MEMBER_UID" NUMBER,
  "BULLETIN_TITLE" VARCHAR2(90),
  "BULLETIN_CONTENT" VARCHAR2(1500),
  "BULLETIN_DLT_YN" CHAR(1) CHECK( BULLETIN_DLT_YN IN ('Y','N') )
);

COMMENT ON COLUMN TB_BULLETIN.BULLETIN_ID IS "게시글 번호(시퀀스)";
COMMENT ON COLUMN TB_BULLETIN.BULLETIN_VCOUNT IS "게시글 조회수";
COMMENT ON COLUMN TB_BULLETIN.BULLETIN_WRT_DATE IS "게시글 작성일자";
COMMENT ON COLUMN TB_BULLETIN.MEMBER_UID IS "멤버UID(시퀀스)";
COMMENT ON COLUMN TB_BULLETIN.BULLETIN_TITLE IS "게시글 제목";
COMMENT ON COLUMN TB_BULLETIN.BULLETIN_CONTENT IS "게시글 내용";
COMMENT ON COLUMN TB_BULLETIN.BULLETIN_DLT_YN IS "게시글 삭제여부(Y/N)";

CREATE TABLE "TB_COMMENT" (
  "BULLETIN_ID" NUMBER,
  "COMMENT_ID" NUMBER,
  "COMMENT_WRT_DATE" DATE,
  "MEMBER_UID" NUMBER,
  "COMMENT_CONTENT" VARCHAR2(300),
  "COMMENT_DLT_YN" CHAR(1) CHECK( COMMENT_DLT_YN IN ('Y','N') ),
  PRIMARY KEY("BULLETIN_ID","COMMENT_ID")
);

COMMENT ON COLUMN TB_COMMENT.BULLETIN_ID IS "게시글 번호(시퀀스)";
COMMENT ON COLUMN TB_COMMENT.COMMENT_ID IS "댓글 번호";
COMMENT ON COLUMN TB_COMMENT.COMMENT_WRT_DATE IS "댓글 작성일자";
COMMENT ON COLUMN TB_COMMENT.MEMBER_UID IS "멤버UID(시퀀스)";
COMMENT ON COLUMN TB_COMMENT.COMMENT_CONTENT IS "댓글 내용";
COMMENT ON COLUMN TB_COMMENT.COMMENT_DLT_YN IS "댓글 삭제여부(Y/N)";

CREATE TABLE "TB_ITEM" (
  "ITEM_ID" NUMBER PRIMARY KEY,
  "ITEM_NAME" VARCHAR2(30),
  "ITEM_PRICE" NUMBER,
  "ITEM_DESC" VARCHAR2(600)
);

COMMENT ON COLUMN TB_ITEM.ITEM_ID IS "아이템 번호(시퀀스)";
COMMENT ON COLUMN TB_ITEM.ITEM_NAME IS "아이템 이름";
COMMENT ON COLUMN TB_ITEM.ITEM_PRICE IS "아이템 가격";
COMMENT ON COLUMN TB_ITEM.ITEM_DESC IS "아이템 설명";

CREATE TABLE "TB_MEMBER_ITEM" (
  "MEMBER_UID" NUMBER,
  "ITEM_ID" NUMBER,
  "ITEM_QTY" NUMBER,
  PRIMARY KEY ("MEMBER_UID", "ITEM_ID")
);

COMMENT ON COLUMN TB_MEMBER_ITEM.MEMBER_UID IS "멤버UID(시퀀스)";
COMMENT ON COLUMN TB_MEMBER_ITEM.ITEM_ID IS "아이템 번호(시퀀스)";
COMMENT ON COLUMN TB_MEMBER_ITEM.ITEM_QTY IS "아이템 보유수량";

-- ================== 외래키 설정 =======================
ALTER TABLE "TB_MEMBER" ADD FOREIGN KEY ("MEMBER_RCODE") REFERENCES "TB_MEMBER_RANK" ("MEMBER_RCODE");
ALTER TABLE "TB_SHARE" ADD FOREIGN KEY ("MEMBER_UID") REFERENCES "TB_MEMBER" ("MEMBER_UID");
ALTER TABLE "TB_SHARE" ADD FOREIGN KEY ("STOCK_ID") REFERENCES "TB_STOCK" ("STOCK_ID");
ALTER TABLE "TB_TRADELOG" ADD FOREIGN KEY ("MEMBER_UID") REFERENCES "TB_MEMBER" ("MEMBER_UID");
ALTER TABLE "TB_TRADELOG" ADD FOREIGN KEY ("STOCK_ID") REFERENCES "TB_STOCK" ("STOCK_ID");
ALTER TABLE "TB_BULLETIN" ADD FOREIGN KEY ("MEMBER_UID") REFERENCES "TB_MEMBER" ("MEMBER_UID");
ALTER TABLE "TB_COMMENT" ADD FOREIGN KEY ("BULLETIN_ID") REFERENCES "TB_BULLETIN" ("BULLETIN_ID");
ALTER TABLE "TB_COMMENT" ADD FOREIGN KEY ("MEMBER_UID") REFERENCES "TB_MEMBER" ("MEMBER_UID");
ALTER TABLE "TB_MEMBER_ITEM" ADD FOREIGN KEY ("ITEM_ID") REFERENCES "TB_ITEM" ("ITEM_ID");
ALTER TABLE "TB_MEMBER_ITEM" ADD FOREIGN KEY ("MEMBER_UID") REFERENCES "TB_MEMBER" ("MEMBER_UID");

-- ================ 트리거 설정 ====================
