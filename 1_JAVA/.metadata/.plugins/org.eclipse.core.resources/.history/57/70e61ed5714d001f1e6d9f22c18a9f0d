package test240729.object1;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.TreeSet;

public class LotteryController {
	private HashSet lottery = new HashSet();
	private HashSet win = new HashSet();
	
	public boolean insertObject(Lottery l) {
		if(!lottery.contains(l)) {
			lottery.add(l);
			return true;
		}
		else {
			return false;
		}
	}
	
	public boolean deleteObject(Lottery l) {
		if(lottery.contains(l)) {
			lottery.remove(l);
			if(win.contains(l)) {
				win.remove(l);
				winObject();
			}
			return true;
		}
		return false;
	}
	
	public HashSet winObject() {
		ArrayList arrList = new ArrayList();
		arrList.addAll(lottery);
		
		if(arrList.size() >= 4) {
			while(win.size() < 4) {
				int index = (int)(Math.random() * arrList.size());
				if(!win.contains(arrList.get(index)))
					win.add(arrList.get( index ));
			}
		}
		return win;
	}
	
	public TreeSet sortedWinObject() {
		ArrayList arrList = new ArrayList();
		arrList.addAll(lottery);
		
		Collections.sort(arrList, new SortedLottery());
		return arrList;
	}
	
	public boolean searchWinner(Lottery l) {
		if(win.contains(l)) return true;
		else return false;
	}
}
